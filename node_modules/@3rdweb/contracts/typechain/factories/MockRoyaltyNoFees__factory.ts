/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockRoyaltyNoFees,
  MockRoyaltyNoFeesInterface,
} from "../MockRoyaltyNoFees";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_controlCenter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_trustedForwarder",
        type: "address",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "payees",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "shares_",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20PaymentReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "PayeeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReleased",
    type: "event",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "distribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "payee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payeeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_URI",
        type: "string",
      },
    ],
    name: "setContractURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "shares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019d6380380620019d68339810160408190526200003491620005d7565b600780546001600160a01b0319166001600160a01b0386161790558051825114620000cc5760405162461bcd60e51b815260206004820152603660248201527f526f79616c74793a20756e657175616c206e756d626572206f6620706179656560448201527f7320616e64207368617265732070726f76696465642e0000000000000000000060648201526084015b60405180910390fd5b60008251116200011f5760405162461bcd60e51b815260206004820152601c60248201527f526f79616c74793a206e6f207061796565732070726f76696465642e000000006044820152606401620000c3565b825162000134906009906020860190620003c9565b50600880546001600160a01b0319166001600160a01b03871617905560005b8251811015620001d157600082828151811062000174576200017462000711565b60200260200101516127106200018b91906200073d565b9050620001bb848381518110620001a657620001a662000711565b602002602001015182620001dd60201b60201c565b5080620001c8816200075f565b91505062000153565b505050505050620007d5565b6001600160a01b0382166200024a5760405162461bcd60e51b815260206004820152602c60248201527f5061796d656e7453706c69747465723a206163636f756e74206973207468652060448201526b7a65726f206164647265737360a01b6064820152608401620000c3565b600081116200029c5760405162461bcd60e51b815260206004820152601d60248201527f5061796d656e7453706c69747465723a207368617265732061726520300000006044820152606401620000c3565b6001600160a01b03821660009081526002602052604090205415620003185760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e7420616c726561647960448201526a206861732073686172657360a81b6064820152608401620000c3565b60048054600181019091557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b038416908117909155600090815260026020526040812082905554620003809082906200077d565b600055604080516001600160a01b0384168152602081018390527f40c340f65e17194d14ddddb073d3c9f888e3cb52b5aae0c6c7706b4fbc905fac910160405180910390a15050565b828054620003d79062000798565b90600052602060002090601f016020900481019282620003fb576000855562000446565b82601f106200041657805160ff191683800117855562000446565b8280016001018555821562000446579182015b828111156200044657825182559160200191906001019062000429565b506200045492915062000458565b5090565b5b8082111562000454576000815560010162000459565b6001600160a01b03811681146200048557600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620004c957620004c962000488565b604052919050565b60006001600160401b03821115620004ed57620004ed62000488565b5060051b60200190565b600082601f8301126200050957600080fd5b81516020620005226200051c83620004d1565b6200049e565b82815260059290921b840181019181810190868411156200054257600080fd5b8286015b848110156200056a5780516200055c816200046f565b835291830191830162000546565b509695505050505050565b600082601f8301126200058757600080fd5b815160206200059a6200051c83620004d1565b82815260059290921b84018101918181019086841115620005ba57600080fd5b8286015b848110156200056a5780518352918301918301620005be565b600080600080600060a08688031215620005f057600080fd5b8551620005fd816200046f565b8095505060208087015162000612816200046f565b60408801519095506001600160401b03808211156200063057600080fd5b818901915089601f8301126200064557600080fd5b8151818111156200065a576200065a62000488565b6200066e601f8201601f191685016200049e565b8181528b858386010111156200068357600080fd5b60005b82811015620006a357848101860151828201870152850162000686565b82811115620006b55760008684840101525b5060608b015190975093505080831115620006cf57600080fd5b620006dd8a848b01620004f7565b94506080890151925080831115620006f457600080fd5b5050620007048882890162000575565b9150509295509295909350565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156200075a576200075a62000727565b500290565b600060001982141562000776576200077662000727565b5060010190565b6000821982111562000793576200079362000727565b500190565b600181811c90821680620007ad57607f821691505b60208210811415620007cf57634e487b7160e01b600052602260045260246000fd5b50919050565b6111f180620007e56000396000f3fe6080604052600436106100eb5760003560e01c80638b83209b1161008a578063d79779b211610059578063d79779b214610324578063e33b7de31461035a578063e4fc6b6d1461036f578063e8a3d4851461038457600080fd5b80638b83209b14610260578063938e3d7b146102985780639852595c146102b8578063ce7c2ac2146102ee57600080fd5b8063406072a9116100c6578063406072a91461019b57806348b75044146101e1578063572b6c051461020157806363453ae11461024057600080fd5b8062dbe1091461014057806319165587146101645780633a98ef391461018657600080fd5b3661013b577f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be7706101196103a6565b604080516001600160a01b0390921682523460208301520160405180910390a1005b600080fd5b34801561014c57600080fd5b506004545b6040519081526020015b60405180910390f35b34801561017057600080fd5b5061018461017f366004610f57565b6103b5565b005b34801561019257600080fd5b50600054610151565b3480156101a757600080fd5b506101516101b6366004610f74565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b3480156101ed57600080fd5b506101846101fc366004610f74565b61056b565b34801561020d57600080fd5b5061023061021c366004610f57565b6007546001600160a01b0391821691161490565b604051901515815260200161015b565b34801561024c57600080fd5b5061018461025b366004610f57565b6107d6565b34801561026c57600080fd5b5061028061027b366004610fad565b61082a565b6040516001600160a01b03909116815260200161015b565b3480156102a457600080fd5b506101846102b3366004610fc6565b61085a565b3480156102c457600080fd5b506101516102d3366004610f57565b6001600160a01b031660009081526003602052604090205490565b3480156102fa57600080fd5b50610151610309366004610f57565b6001600160a01b031660009081526002602052604090205490565b34801561033057600080fd5b5061015161033f366004610f57565b6001600160a01b031660009081526005602052604090205490565b34801561036657600080fd5b50600154610151565b34801561037b57600080fd5b506101846109ff565b34801561039057600080fd5b50610399610a51565b60405161015b9190611068565b60006103b0610ae3565b905090565b6001600160a01b03811660009081526002602052604090205461042e5760405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201526573686172657360d01b60648201526084015b60405180910390fd5b600061043960015490565b61044390476110b1565b90506000610470838361046b866001600160a01b031660009081526003602052604090205490565b610b0b565b9050806104d35760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201526a191d59481c185e5b595b9d60aa1b6064820152608401610425565b6001600160a01b038316600090815260036020526040812080548392906104fb9084906110b1565b92505081905550806001600082825461051491906110b1565b9091555061052490508382610b50565b604080516001600160a01b0385168152602081018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b056910160405180910390a1505050565b6001600160a01b0381166000908152600260205260409020546105df5760405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201526573686172657360d01b6064820152608401610425565b6001600160a01b0382166000908152600560205260408120546040516370a0823160e01b81523060048201526001600160a01b038516906370a082319060240160206040518083038186803b15801561063757600080fd5b505afa15801561064b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066f91906110c9565b61067991906110b1565b905060006106b2838361046b87876001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b9050806107155760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201526a191d59481c185e5b595b9d60aa1b6064820152608401610425565b6001600160a01b0380851660009081526006602090815260408083209387168352929052908120805483929061074c9084906110b1565b90915550506001600160a01b038416600090815260056020526040812080548392906107799084906110b1565b9091555061078a9050848483610c69565b604080516001600160a01b038581168252602082018490528616917f3be5b7a71e84ed12875d241991c70855ac5817d847039e17a9d895c1ceb0f18a910160405180910390a250505050565b60005b6004548110156108265761081482600483815481106107fa576107fa6110e2565b6000918252602090912001546001600160a01b031661056b565b8061081e816110f8565b9150506107d9565b5050565b60006004828154811061083f5761083f6110e2565b6000918252602090912001546001600160a01b031692915050565b6008546040805163a217fddf60e01b815290516001600160a01b03909216916391d1485491839163a217fddf91600480820192602092909190829003018186803b1580156108a757600080fd5b505afa1580156108bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108df91906110c9565b6108e76103a6565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526001600160a01b0316602482015260440160206040518083038186803b15801561094457600080fd5b505afa158015610958573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097c9190611113565b6109ee5760405162461bcd60e51b815260206004820152603660248201527f526f79616c74793a206f6e6c7920612070726f746f636f6c2061646d696e206360448201527f616e2063616c6c20746869732066756e6374696f6e2e000000000000000000006064820152608401610425565b6109fa60098383610ea9565b505050565b60005b600454811015610a4e57610a3c60048281548110610a2257610a226110e2565b6000918252602090912001546001600160a01b03166103b5565b80610a46816110f8565b915050610a02565b50565b606060098054610a6090611135565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8c90611135565b8015610ad95780601f10610aae57610100808354040283529160200191610ad9565b820191906000526020600020905b815481529060010190602001808311610abc57829003601f168201915b5050505050905090565b6007546000906001600160a01b0316331415610b06575060131936013560601c90565b503390565b600080546001600160a01b038516825260026020526040822054839190610b329086611170565b610b3c919061118f565b610b4691906111b1565b90505b9392505050565b80471015610ba05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610425565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610bed576040519150601f19603f3d011682016040523d82523d6000602084013e610bf2565b606091505b50509050806109fa5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610425565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401526109fa92869291600091610d0e918516908490610d9e565b8051909150156109fa5780806020019051810190610d2c9190611113565b6109fa5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610425565b6060610b46848460008585843b610df75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610425565b600080866001600160a01b03168587604051610e1391906111c8565b60006040518083038185875af1925050503d8060008114610e50576040519150601f19603f3d011682016040523d82523d6000602084013e610e55565b606091505b5091509150610e65828286610e70565b979650505050505050565b60608315610e7f575081610b49565b825115610e8f5782518084602001fd5b8160405162461bcd60e51b81526004016104259190611068565b828054610eb590611135565b90600052602060002090601f016020900481019282610ed75760008555610f1d565b82601f10610ef05782800160ff19823516178555610f1d565b82800160010185558215610f1d579182015b82811115610f1d578235825591602001919060010190610f02565b50610f29929150610f2d565b5090565b5b80821115610f295760008155600101610f2e565b6001600160a01b0381168114610a4e57600080fd5b600060208284031215610f6957600080fd5b8135610b4981610f42565b60008060408385031215610f8757600080fd5b8235610f9281610f42565b91506020830135610fa281610f42565b809150509250929050565b600060208284031215610fbf57600080fd5b5035919050565b60008060208385031215610fd957600080fd5b823567ffffffffffffffff80821115610ff157600080fd5b818501915085601f83011261100557600080fd5b81358181111561101457600080fd5b86602082850101111561102657600080fd5b60209290920196919550909350505050565b60005b8381101561105357818101518382015260200161103b565b83811115611062576000848401525b50505050565b6020815260008251806020840152611087816040850160208701611038565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b600082198211156110c4576110c461109b565b500190565b6000602082840312156110db57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561110c5761110c61109b565b5060010190565b60006020828403121561112557600080fd5b81518015158114610b4957600080fd5b600181811c9082168061114957607f821691505b6020821081141561116a57634e487b7160e01b600052602260045260246000fd5b50919050565b600081600019048311821515161561118a5761118a61109b565b500290565b6000826111ac57634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156111c3576111c361109b565b500390565b600082516111da818460208701611038565b919091019291505056fea164736f6c6343000809000a";

type MockRoyaltyNoFeesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockRoyaltyNoFeesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockRoyaltyNoFees__factory extends ContractFactory {
  constructor(...args: MockRoyaltyNoFeesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _controlCenter: string,
    _trustedForwarder: string,
    _uri: string,
    payees: string[],
    shares_: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockRoyaltyNoFees> {
    return super.deploy(
      _controlCenter,
      _trustedForwarder,
      _uri,
      payees,
      shares_,
      overrides || {}
    ) as Promise<MockRoyaltyNoFees>;
  }
  getDeployTransaction(
    _controlCenter: string,
    _trustedForwarder: string,
    _uri: string,
    payees: string[],
    shares_: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _controlCenter,
      _trustedForwarder,
      _uri,
      payees,
      shares_,
      overrides || {}
    );
  }
  attach(address: string): MockRoyaltyNoFees {
    return super.attach(address) as MockRoyaltyNoFees;
  }
  connect(signer: Signer): MockRoyaltyNoFees__factory {
    return super.connect(signer) as MockRoyaltyNoFees__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockRoyaltyNoFeesInterface {
    return new utils.Interface(_abi) as MockRoyaltyNoFeesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockRoyaltyNoFees {
    return new Contract(address, _abi, signerOrProvider) as MockRoyaltyNoFees;
  }
}
